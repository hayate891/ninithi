/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MwntPanel.java
 *
 * Created on Mar 12, 2010, 12:32:51 PM
 */
package nano.envnt3D.tools.mwnt;

//import envnt3D.atoms;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.net.URL;
import javax.media.j3d.TransformGroup;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import nano.envnt3D.tools.mwnt.Mwtubes;
import nano.envnt3D.tools.mwnt.TubeTableCellRenderer;
import nano.envnt3D.AppearanceNano;
import nano.envnt3D.Coords;
import nano.envnt3D.Interface3D;
import nano.envnt3D.commonElements.Atom;
import nano.envnt3D.commonElements.Bond;
import nano.envnt3D.commonElements.ColorPanel.paneleListener;
import nano.envnt3D.tools.swnt.swnt.nanotube;

/**
 *
 * @author chanaka
 */
public class MwntPanel extends javax.swing.JPanel {

    /** Creates new form MwntPanel */
    private int tubecount = 0;
    private int tubeNo = 0;
    private int noOfTubes, m, n;
    DefaultTableModel model;
    private Mwtubes mwtube;
    private double length;
    private nanotube tubei;
    private boolean notfirstview = false;
    double[][] coords_bond;
    double[][] coords_atom;
    private TransformGroup atomsGroup, bondsGroup;
    AppearanceNano appearancenano = new AppearanceNano();
    boolean firstClick = true;
    //  TubeTableModel model1;

    public MwntPanel() {
        initComponents();

        colorPanel1.addColorEventListener(new paneleListener() {

            @Override
            public void colorChangePerformed(ActionEvent e) {
                //throw new UnsupportedOperationException("Not supported yet.");
                drawButActionPerformed(e);
            }

            @Override
            public void radiousChangePerformed(ChangeEvent evt) {
                //throw new UnsupportedOperationException("Not supported yet.");
                drawButActionPerformed(null);
            }
        });

        colorPanel2.addColorEventListener(new paneleListener() {

            @Override
            public void colorChangePerformed(ActionEvent e) {
                //throw new UnsupportedOperationException("Not supported yet.");
                drawButActionPerformed(e);

            }

            @Override
            public void radiousChangePerformed(ChangeEvent evt) {
                //throw new UnsupportedOperationException("Not supported yet.");
                drawButActionPerformed(null);
            }
        });

        TubeTableCellRenderer renderer = new TubeTableCellRenderer();
        tubeTable.setCellSelectionEnabled(true);

        // tubeTable.setDefaultRenderer(tubeTable.getColumnClass(3), renderer);
        model = new DefaultTableModel(new Object[]{"Tube", "m", "n", "Delete"}, 0) {

            @Override
            public boolean isCellEditable(int row, int col) {
                if (col == 3) {
                    return false; //Renders column 0 uneditable.
                }
                return true;
            }
        };

        //  model1 = new TubeTableModel();

        tubeTable.setModel(model);
        tubeTable.setColumnSelectionAllowed(false);
        tubeTable.setRowSelectionAllowed(false);
        ListSelectionModel cellSelectionModel = tubeTable.getSelectionModel();
        cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        cellSelectionModel.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {


                int selectedRow = tubeTable.getSelectedRow();
                int selectedColumn = tubeTable.getSelectedColumn();
                int selectedColomns = tubeTable.getSelectedColumnCount();
                int selectedRows = tubeTable.getSelectedRowCount();

                if (selectedColumn == 3 && selectedColomns == 1 && selectedRows == 1) {
                    model.removeRow(selectedRow);
                    tubecount--;

                }

                if (notfirstview) {
                    drawMwtube();
                }

            }
        });

        tubeTable.getColumnModel().getColumn(3).setCellRenderer(renderer);
        //tubeTable.getTableHeader().

        URL url=this.getClass().getResource("images/plus.png");
        Icon icon=new ImageIcon(url);
        addtubebut.setIcon(icon);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lengthtext = new javax.swing.JTextField();
        addtubes = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        mtext = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        ntext = new javax.swing.JTextField();
        addtubebut = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tubeTable = new javax.swing.JTable();
        drawBut = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        colorPanel1 = new nano.envnt3D.commonElements.ColorPanel.ColorPanel();
        jPanel2 = new javax.swing.JPanel();
        colorPanel2 = new nano.envnt3D.commonElements.ColorPanel.ColorPanel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Bitstream Vera Sans", 1, 13));
        jLabel1.setText("Inputs to draw multi-wall ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 210, -1));

        jLabel2.setFont(new java.awt.Font("Bitstream Vera Sans", 1, 13));
        jLabel2.setText("carbon nanotube");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 20));

        jLabel3.setText("Length (in A):");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));

        lengthtext.setText(" ");
        add(lengthtext, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 80, -1));

        addtubes.setBorder(javax.swing.BorderFactory.createTitledBorder("Add single wall nanotubes"));

        jLabel4.setText("m:");

        mtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mtextActionPerformed(evt);
            }
        });

        jLabel5.setText("n:");

        addtubebut.setText("Add this tube");
        addtubebut.setIconTextGap(6);
        addtubebut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addtubebutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addtubesLayout = new javax.swing.GroupLayout(addtubes);
        addtubes.setLayout(addtubesLayout);
        addtubesLayout.setHorizontalGroup(
            addtubesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addtubesLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(addtubesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addtubebut, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addGroup(addtubesLayout.createSequentialGroup()
                        .addGroup(addtubesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(28, 28, 28)
                        .addGroup(addtubesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ntext, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                            .addComponent(mtext, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))))
                .addGap(64, 64, 64))
        );
        addtubesLayout.setVerticalGroup(
            addtubesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addtubesLayout.createSequentialGroup()
                .addGroup(addtubesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addtubesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4))
                    .addComponent(mtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addtubesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ntext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(addtubebut, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(addtubes, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 250, 140));

        jLabel6.setText("List of CNTs :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 140, -1));

        tubeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Tube No", "m", "n", "Delete tube"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tubeTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 250, 120));

        drawBut.setText("Draw MWNT");
        drawBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                drawButActionPerformed(evt);
            }
        });
        add(drawBut, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, 120, -1));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Atom"));

        colorPanel1.setRGBColor(new java.awt.Color(255, 205, 0));
        colorPanel1.setRadius(20.0F);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(colorPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(colorPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addGap(4, 4, 4))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 250, 100));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Bond"));

        colorPanel2.setRGBColor(new java.awt.Color(0, 242, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(colorPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(colorPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 540, 250, 100));
    }// </editor-fold>//GEN-END:initComponents

    private void mtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mtextActionPerformed

    private void addtubebutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addtubebutActionPerformed
        // TODO add your handling code here:
        tubecount++;
        tubeNo++;

        String m_val = mtext.getText();
        String n_val = ntext.getText();
        //     Font font= new Font(n_val, WIDTH, WIDTH)
        if (tubecount == 1) {
            tubeNo = 1;
        }
        model.addRow(new Object[]{"tube" + tubeNo, m_val, n_val, "X"});

        if (notfirstview) {
            drawMwtube();
        }

        //   tubeTable.updateUI();
        //  tubeTable.repaint();
        //  jScrollPane1.updateUI();
        //   tubeTable.setValueAt("X", tubecount-1, 3);
        //    tubeTable.setValueAt("tube"+tubecount, tubecount-1, 0);
        //    tubeTable.setValueAt(m_val, tubecount-1, 1);
        //     tubeTable.setValueAt(n_val, tubecount-1, 2);



        //   jTextArea1.append(tubecount+":"+m_val);

    }//GEN-LAST:event_addtubebutActionPerformed

    private void drawButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_drawButActionPerformed
        // TODO add your handling code here:

        notfirstview = true;
        drawMwtube();
        /*    mwtube = new Mwtubes();
        noOfTubes =tubeTable.getRowCount();
        try {
        length= Double.parseDouble(lengthtext.getText())/1.42;
        } catch (NumberFormatException numberFormatException) {

        JOptionPane.showMessageDialog(this, "Length should be a number");
        }

        for(int i=0;i<noOfTubes;i++){

        try {
        m = Integer.parseInt((String) tubeTable.getValueAt(i, 1));
        n = Integer.parseInt((String) tubeTable.getValueAt(i, 2));
        tubei= new nanotube(m, n, length);
        mwtube.addTube(tubei);

        } catch (NumberFormatException numberFormatException) {

        JOptionPane.showMessageDialog(this, "m and n should be integers. Error in row "+i);
        }
        System.out.println(m+","+n+","+mwtube.getNumberOfTubes());
        }
        
        atoms draw = new atoms(mwtube.getAtomCoordinates(),mwtube.getBondCoordinates()); */
    }//GEN-LAST:event_drawButActionPerformed

    private void drawMwtube() {
        mwtube = new Mwtubes();
        noOfTubes = tubeTable.getRowCount();
        try {
            length = Double.parseDouble(lengthtext.getText()) / 1.42;
            for (int i = 0; i < noOfTubes; i++) {

                try {
                    m = Integer.parseInt((String) tubeTable.getValueAt(i, 1));
                    n = Integer.parseInt((String) tubeTable.getValueAt(i, 2));

                    if(m+n > 0){
                    tubei = new nanotube(m, n, length);
                    mwtube.addTube(tubei);
                    }
                    else{
                        JOptionPane.showMessageDialog(this, "At least one of m and n should be non-zero.Error in row " + (i+1));
                    }


                } catch (NumberFormatException numberFormatException) {

                    JOptionPane.showMessageDialog(this, "m and n should be integers. Error in row " + (i+1));
                }

            }

            try {
                coords_atom = mwtube.getAtomCoordinates();
                coords_bond = mwtube.getBondCoordinates();
                Coords coords = new Coords();
                //coords_atom = coords.adjustCoordsToCenter(coords_atom);
                //coords_bond = coords.adjustCoordsToCenter(coords_bond);

                Atom atom = new Atom();
                atomsGroup = atom.drawAtoms(coords_atom, appearancenano.setMatColor(colorPanel1.getRGBColor()), colorPanel1.getRadius() / 100);


                Bond bond = new Bond();
                bondsGroup = bond.drawBonds(coords_bond, appearancenano.setMatColor(colorPanel2.getRGBColor()), colorPanel2.getRadius() / 100);



                //simpleu.addBranchGraph(BG);
                //Interface3D.addBG(BG);
                TransformGroup[] TG = {atomsGroup, bondsGroup};

                if (firstClick) {
                    firstClick = false;
                } else {
                    Interface3D.removeLastBG();
                }
                Interface3D.createBG(TG);
                Interface3D.displayLastBG();
            } catch (Exception e) {

            }
        } catch (NumberFormatException numberFormatException) {

            JOptionPane.showMessageDialog(this, "Length should be a number");
        }




    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addtubebut;
    private javax.swing.JPanel addtubes;
    private nano.envnt3D.commonElements.ColorPanel.ColorPanel colorPanel1;
    private nano.envnt3D.commonElements.ColorPanel.ColorPanel colorPanel2;
    private javax.swing.JButton drawBut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lengthtext;
    private javax.swing.JTextField mtext;
    private javax.swing.JTextField ntext;
    private javax.swing.JTable tubeTable;
    // End of variables declaration//GEN-END:variables
}
